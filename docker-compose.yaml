services:
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    networks:
      - openwebui
    ports:
      - "8080:8080"
    volumes:
      - ./searxng-config/settings.yml:/etc/searxng/settings.yml:ro
    environment:
      - BASE_URL=http://localhost:8080/
      - INSTANCE_NAME=openwebui-search
      - SEARXNG_SECRET=your-secret-key-here
      - SEARXNG_HOSTNAME=0.0.0.0
    restart: unless-stopped

  pipelines:
    build:
      context: ./pipelines
      dockerfile: Dockerfile
      args:
        MINIMUM_BUILD: "false"
        USE_CUDA: "false"
    container_name: pipelines
    volumes:
      - ./pipelines/pipelines:/app/pipelines:rw
    ports:
      - "9099:9099"
    environment:
      - HOST=0.0.0.0
      - PORT=9099
      - API_KEY=0p3n-w3bu!
      - DEBUG=True
      - PIPELINES_DIR=/app/pipelines
    networks:
      - openwebui
    restart: unless-stopped

  open-webui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - ./uploads:/app/backend/uploads:rw
      - ./storage:/app/backend/storage:rw
      # Remove or comment out the configs volume mounts since we're not using them
      # - ./configs:/app/configs:ro
      # - ./configs/models.yml:/app/backend/config/models.yml:ro
    ports:
      - "3000:8080"
    environment:
      # Point to local Ollama instance
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - SEARXNG_QUERY_URL=http://searxng:8080/search
      # RAG and file handling settings
      - ENABLE_RAG=true
      - ENABLE_RAG_WEB_SEARCH=true
      - RAG_WEB_SEARCH_ENGINE=searxng
      - RAG_EMBEDDING_MODEL=all-MiniLM-L6-v2
      - RAG_CHUNK_SIZE=1000
      - RAG_CHUNK_OVERLAP=100
      - RAG_TOP_K=3
      - RAG_FILE_MAX_SIZE=50000000
      - RAG_FILE_MAX_COUNT=10
      # File upload settings
      - FILE_UPLOAD_PATH=/app/backend/uploads
      - STORAGE_PATH=/app/backend/storage
      # Remove all Kokoro-specific variables
      - ENABLE_TTS=false
      - USE_BROWSER_TTS=true
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - openwebui
    depends_on:
      - pipelines
      - searxng

networks:
  openwebui:
    driver: bridge

volumes:
  open-webui: {}
